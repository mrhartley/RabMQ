plugins {
  id 'java'
  id 'groovy'
  id 'com.diffplug.spotless' version '5.6.1'
  id 'com.github.spotbugs' version '4.6.0'
  id 'pmd'
}

repositories {
  mavenCentral()

  flatDir {
    dirs 'libs'
  }
}

dependencies {
  compileOnly name: 'appian-plug-in-sdk-17.2'
  compileOnly 'com.appian:connected-systems-core:1.2.0'
  compileOnly 'javax.servlet:javax.servlet-api:3.1.0'
  compileOnly 'javax.annotation:javax.annotation-api:1.2'
  compileOnly 'javax.persistence:javax.persistence-api:2.2'
  compileOnly 'commons-io:commons-io:2.4'
  compileOnly 'commons-lang:commons-lang:2.6'
  compileOnly 'log4j:log4j:1.2.17'

  // add your runtime dependencies here

  implementation name: 'typetransformer-1.3'

  // https://mvnrepository.com/artifact/com.rabbitmq/amqp-client
  implementation group: 'com.rabbitmq', name: 'amqp-client', version: '5.12.0'
  // https://mvnrepository.com/artifact/org.apache.httpcomponents/httpclient
  implementation group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.13'
  // https://mvnrepository.com/artifact/org.apache.httpcomponents/httpcore
  implementation group: 'org.apache.httpcomponents', name: 'httpcore', version: '4.4.14'




  testImplementation 'org.junit.jupiter:junit-jupiter:5.7.0'
  testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.0'

  spotbugsPlugins 'com.h3xstream.findsecbugs:findsecbugs-plugin:1.11.0'
}

test {
  useJUnitPlatform()
}

configurations {
  testImplementation.extendsFrom compileOnly
  // excludes transitive dependencies
  implementation.transitive = false
}

spotless {
  encoding 'UTF-8'

  groovyGradle {
    target '**/*.gradle'
    greclipse().configFile('.settings/greclipse.properties')
  }

  java {
    eclipse().configFile('.settings/org.eclipse.jdt.core.prefs')
    removeUnusedImports()
  }

  format 'xml', {
    target 'src/**/*.xml'
    eclipseWtp('xml').configFile('.settings/org.eclipse.wst.xml.core.prefs')
  }

  format 'misc', {
    target '*.md'
    trimTrailingWhitespace()
    indentWithSpaces(2)
    endWithNewline()
  }
}

spotbugs {
  ignoreFailures = true
  showProgress = true
}

spotbugsMain {
  reports {
    html {
      enabled = true
      stylesheet = 'fancy-hist.xsl'
    }

    xml {
      enabled = false
    }
  }
}


pmd {
  consoleOutput = true
  ignoreFailures = true
  ruleSets = [
    "category/java/errorprone.xml",
    "category/java/bestpractices.xml"
  ]
}

jar {
  dependsOn check
  duplicatesStrategy = DuplicatesStrategy.FAIL

  configurations.implementation.setCanBeResolved(true)

  into('META-INF/lib') {
    from(configurations.implementation)
  }

  into('src') {
    from (sourceSets.main.allJava)
  }

  manifest {
    attributes("Spring-Context": "*;publish-context:=false")
  }
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

version = new XmlSlurper().parse(file('src/main/resources/appian-plugin.xml')).'plugin-info'.version